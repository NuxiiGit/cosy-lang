-- object class
class Truthy 'a {
    truthy : 'a -> bool
}

-- object implementations
instance Truthy i32 {
	truthy x = x != 0
}

instance Truthy bool {
    truthy x = x
}

instance Truthy String {
	truthy x = x != ""
}

if truthy $ 12 - 3 {
	-- 12 - 3 = 9
	-- 9 is not truthy
}

if truthy false {
	-- false is not truthy
}

if truthy "" {
	-- the empty string is not truthy
}

-- implementations
instance String {
	-- public methods here
	(a : String) + (b : String) = a ++ b
} where {
	-- private methods here
}

-- method call
var hello_world = "hello".+ "world";
var hello_world' = String::+ "hello" "world"; -- equivalent

-- "pseudo operator"
var hello_world'' = "hello" .+ "world"; -- equivalent to previous examples

-- class constraints
let boolean_eval : {Truthy 'a} (bool -> bool -> bool) -> 'a -> 'a -> bool;
boolean_eval = \(~) \a \b -> truthy a ~ truthy b;

-- casting
class Conversion 'from 'to {
	cast : 'from -> 'to
}

instance Conversion bool i32 {
	-- cast : bool -> i32
	cast x = if x { 1 } else { 0 }
}

instance Conversion i32 bool {
	-- cast : i32 -> bool
	cast x = x > 0
}

var bool_as_int = cast true : i32;
var int_as_bool = cast 123 : bool;