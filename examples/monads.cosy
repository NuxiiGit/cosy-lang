-- potentially a special `do` notation for failure/monadic types
-- assuming the type `Option` has some pre-defined boilerplate where `None` short circuits

let impure_a = Some(2);
let impure_b = None;
let result = do {
	a <- impure_a,
	b <- impure_b,
	a + b
};

-- equivalent to
let result = impure_a >>= \a -> impure_b >>= \b -> a + b;