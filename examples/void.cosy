-- void type is used for non-terminating programs
def error(msg : str) : void = do {
    print(msg);
    exit()
};

-- some control structures may also have a type of `void`
let a : void = repeat { };
let b : void = continue;
let c : void = return;
let d : void = break;

-- absurd, which lets you coerce `void` into any type ("ex falso quodlibet")
def absurd[a : type](x : void) : a = absurd(x);
